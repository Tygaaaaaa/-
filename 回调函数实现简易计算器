//计算器                                              
//#include<stdio.h>
//#include<Windows.h>
//
//void menu()                                                     //(1)运用switch语句不够简洁
//{
//	printf("******************\n");
//	printf("** 1.add  2.sub **\n");
//	printf("** 3.mul  4.div **\n");
//	printf("**    0.exit    **\n");
//	printf("******************\n");
//}
//int Add(int x, int y)
//{
//	return x + y;
//}
//int Sub(int x, int y)
//{
//	return x - y;
//}
//int Mul(int x, int y)
//{
//	return x * y;
//}
//int Div(int x, int y)
//{
//	return x / y;
//}
//int main()
//{
//	int input = 0;
//	int x, y = 0;
//	do
//	{
//		menu();
//		printf("请选择:>");
//		scanf("%d", &input);
//		switch (input)
//		{
//		case 1:
//			printf("请输入两个操作数:>");
//			scanf("%d%d", &x, &y);
//			printf("%d\n", Add(x, y));
//			break;
//		case 2:
//			printf("请输入两个操作数:>");
//			scanf("%d%d", &x, &y);
//			printf("%d\n", Sub(x, y));
//			break;
//		case 3:
//			printf("请输入两个操作数:>");
//			scanf("%d%d", &x, &y);
//			printf("%d\n", Mul(x, y));
//			break;
//		case 4:
//			printf("请输入两个操作数:>");
//			scanf("%d%d", &x, &y);
//			printf("%d\n", Div(x, y));
//			break;
//		case 0:
//			printf("已退出\n");
//			break;
//		default:
//			printf("选择错误,请重试\n");
//			break;
//		}
//
//	} while (input);
//	return 0;
//}
// ——————————————————————————————————————————————————————————————————————————————————————————————————
//#include<stdio.h>
//#include<Windows.h>
//
//void menu()                                                       //优化1
//{                                                                 //用回调函数减少冗余代码
//	printf("******************\n");
//	printf("** 1.add  2.sub **\n");
//	printf("** 3.mul  4.div **\n");
//	printf("**    0.exit    **\n");
//	printf("******************\n");
//}
//int Add(int x, int y)
//{
//	return x + y;
//}
//int Sub(int x, int y)
//{
//	return x - y;
//}
//int Mul(int x, int y)
//{
//	return x * y;
//}
//int Div(int x, int y)
//{
//	return x / y;
//}
//void Cala(int (*pf)(int, int))//pf为回调函数
//{
//	int x, y = 0;
//	printf("请输入两个操作数:>");
//	scanf("%d%d", &x, S&y);
//	printf("%d\n", pf(x, y));
//}
//int main()
//{
//	int input = 0;
//	do
//	{
//		menu();
//		printf("请选择:>");
//		scanf("%d", &input);
//		switch (input)
//		{
//		case 1:
//			Cala(Add);//传入函数地址
//			break;
//		case 2:
//			Cala(Sub);
//			break;
//		case 3:
//			Cala(Mul);
//			break;
//		case 4:
//			Cala(Div);
//			break;
//		case 0:
//			printf("已退出\n");
//			break;
//		default:
//			printf("选择错误,请重试\n");
//			break;
//		}
//
//	} while (input);
//	return 0;
//}
//——————————————————————————————————————————————————————————————————————————————————————————————————————————
//#include<stdio.h>
//#include<Windows.h>
//void menu()
//{                                                                //优化2 使用函数指针数组实现
//	printf("******************\n");                                //优点是方便代码变动
//	printf("** 1.add  2.sub **\n");
//	printf("** 3.mul  4.div **\n");
//	printf("** 5.xor  0.exit**\n");
//	printf("******************\n");
//}
//int Add(int x, int y)
//{
//	return x + y;
//}
//int Sub(int x, int y)
//{
//	return x - y;
//}
//int Mul(int x, int y)
//{
//	return x * y;
//}
//int Div(int x, int y)
//{
//	return x / y;
//}
//int Xor(int x, int y)
//{
//	return x ^ y;
//}
//int main()
//{
//	int input = 0;
//	int x, y = 0;
//	int (*pfarr[])(int x, int y) = { 0,Add,Sub,Mul,Div,Xor };//函数指针数组
//	do
//	{
//		menu();
//		printf("请选择:>");
//		scanf("%d", &input);
//		if (input >= 1 && input <= 5)
//		{
//			printf("请输入两个操作数:>");
//			scanf("%d%d", &x, &y);
//			printf("%d\n", pfarr[input](x, y));
//			printf("请按任意键继续\n");
//			system("pause");
//			system("cls");
//		}
//		else if (input == 0)
//		{
//			system("cls");
//			printf("已退出\n");
//		}
//		else
//		{
//			printf("选择错误，请重试\n");
//			printf("请按任意键继续\n");
//			system("pause");
//			system("cls");
//		}
//	} while (input);
//	return 0;
//}
